Etapa de modelagem Lógica

    Etapa de esquematização do que foi desenvolvido na etapa de modelagem
    conceitual.

    link para o diagrama: https://dbdiagram.io/d/Projeto-Uniruy-66e9ef53a0828f8aa62c70d8
        No diagrama existe as relações e cada chave respectiva por elas.
        
    Padronização:
        Nome de tabelas devem estar devidamente padronizadas da seguinte
        forma

        Nomeclatura de tabelas:

            - Primeira letra da palavra maiuscula
            - Sem espaço, hifen ou underline
            - No singular

            Segue exemplo: 

                Tabela Funcionario
                Tabela ImpostoDeRenda
                Tabela Recibo
            
        Nomeclatura de variaveis: 
            - Minusculo
            - Separada por underline
            - No singular

        Palavras Reservadas da linguagem SQL:

            - Maiusculas

    Modelo Lógico:

        Modelo lógico ajustado para PostgreSQL
        
        Legenda: 
            SERIAL - Autoincrement no PostgreSQL
            NUMERIC/REAL - Uso mais comum do FLOAT para valores monetários

        Tabela Paciente

            CREATE TABLE paciente (
                id_paciente SERIAL PRIMARY KEY,
                nome_paciente VARCHAR(100) NOT NULL,
                data_nascimento_paciente DATE NOT NULL,
                endereco_paciente VARCHAR(255) NOT NULL,
                telefone_paciente VARCHAR(20),
                email_paciente VARCHAR(100) NOT NULL,
                historico_medico_paciente TEXT
            );

        Tabela Medico

            CREATE TABLE medico (
                id_medico SERIAL PRIMARY KEY,
                nome_medico VARCHAR(100) NOT NULL,
                especialidade_medico VARCHAR(100) NOT NULL,
                telefone_medico VARCHAR(20) NOT NULL,
                email_medico VARCHAR(100) NOT NULL
            );

        Tabela Consulta

            CREATE TABLE consulta (
                id_consulta SERIAL PRIMARY KEY,
                id_pacienteFK INTEGER NOT NULL,
                id_medicoFK INTEGER NOT NULL,
                data_consulta DATE NOT NULL,
                horario_consulta TIMESTAMP NOT NULL,
                status_consulta VARCHAR(20) NOT NULL,
                FOREIGN KEY (id_pacienteFK) REFERENCES paciente(id_paciente),
                FOREIGN KEY (id_medicoFK) REFERENCES medico(id_medico)
            );

        Tabela Registro Medico

            CREATE TABLE registroMedico (
                id_registro SERIAL PRIMARY KEY,
                id_consultaFK INTEGER NOT NULL,
                prescricao_registro TEXT NOT NULL,
                observacao_registro TEXT NOT NULL,
                FOREIGN KEY (id_consultaFK) REFERENCES consulta(id_consulta)
            );

        Tabela Pagamento

            CREATE TABLE pagamento (
                id_pagamento SERIAL PRIMARY KEY,
                id_consultaFK INTEGER NOT NULL,
                valor_pagamento NUMERIC(10, 2) NOT NULL,
                data_pagamento DATE NOT NULL,
                pago BOOLEAN NOT NULL,
                FOREIGN KEY (id_consultaFK) REFERENCES consulta(id_consulta)
            );



